/**
 * Tests for all formatting-options.
 */

/*jshint boss: true, laxbreak: true, node: true */

var JSHINT = require('../jshint.js').JSHINT,
    helper = require("./testhelper").setup.testhelper,
    assert = require('assert'),
    fs     = require('fs');

/**
 * Whitespace rules
 * find errors that the "white"-option did not find
 */
exports.format_whitespace = function () {
    var src = fs.readFileSync(__dirname + "/fixtures/format/whitespace.js", "utf8");
    
    helper(JSHINT, src)
        .init(true, {checkformat: false})
        
        .init(false, {checkformat: true})
        .run()
            // function
            .hasError(2, "Expected whitespace '\xB7' between 'function' and 'hello', but '\xB7\xB7' found.")
            .hasError(2, "Expected whitespace '\xB7' between ')' and '{', but '\xB7\xB7\xB7' found.")
            .hasError(3, "Expected whitespace '\xB7' between 'return' and '+', but '\xB7\xB7\xB7' found.")
            .hasError(3, "Unexpected whitespace '\xB7\xB7' between '+' and '2'.")
            .hasError(5, "Expected whitespace '\xB7' between 'function' and '(', but '\xB7\xB7' found.")
            .hasError(5, "Expected whitespace '\xB7' between ',' and 'b', but '\xB7\xB7\xB7' found.")
            .hasError(5, "Expected whitespace '\xB7' between ')' and '{', but '\xB7\xB7\xB7' found.")
            // try
            .hasError(7, "Expected whitespace '\xB7' between 'try' and '{', but '\xB7\xB7' found.")
            .hasError(8, "Expected whitespace '\xB7' between '}' and 'catch', but '\xB7\xB7' found.")
            .hasError(8, "Expected whitespace '\xB7' between 'catch' and '(', but '\xB7\xB7\xB7' found.")
            .hasError(8, "Unexpected whitespace '\xB7\xB7\xB7\xB7' between '(' and 'ex'.")
            .hasError(8, "Unexpected whitespace '\xB7\xB7\xB7\xB7\xB7' between 'ex' and ')'.")
            .hasError(8, "Expected whitespace '\xB7' between ')' and '{', but '\xB7\xB7\xB7\xB7\xB7...' found.")
            .hasError(11, "Expected whitespace '\xB7' between '}' and 'catch', but '' found.")
            // try
            .hasError(14, "Expected whitespace '\xB7' between 'throw' and 'test', but '\xB7\xB7\xB7' found.")
            // while
            .hasError(17, "Expected whitespace '\xB7' between 'while' and '(', but '\xB7\xB7' found.")
            .hasError(17, "Expected whitespace '\xB7' between ')' and '{', but '\xB7\xB7\xB7' found.")
            // do
            .hasError(20, "Expected whitespace '\xB7' between 'do' and '{', but '\xB7\xB7' found.")
            .hasError(21, "Expected whitespace '\xB7' between '}' and 'while', but '\xB7\xB7' found.")
            .hasError(21, "Expected whitespace '\xB7' between 'while' and '(', but '\xB7\xB7\xB7' found.")
            .hasError(23, "Expected whitespace '\xB7' between '}' and 'while', but '' found.")
            // for
            .hasError(25, "Expected whitespace '\xB7' between 'for' and '(', but '\xB7\xB7' found.")
            .hasError(25, "Unexpected whitespace '\xB7\xB7' between 'i' and ';'.")
            .hasError(25, "Expected whitespace '\xB7' between ';' and 'i', but '\xB7\xB7\xB7' found.")
            .hasError(25, "Expected whitespace '\xB7' between 'i' and '<', but '\xB7\xB7' found.")
            .hasError(25, "Expected whitespace '\xB7' between '<' and '3', but '\xB7\xB7\xB7' found.")
            .hasError(25, "Unexpected whitespace '\xB7\xB7' between '3' and ';'.")
            .hasError(25, "Expected whitespace '\xB7' between ';' and 'i', but '\xB7\xB7\xB7\xB7' found.")
            .hasError(25, "Expected whitespace '\xB7' between ')' and '{', but '\xB7\xB7\xB7' found.")
            .hasError(26, "Expected whitespace '\xB7' between ';' and 'i', but '' found.")
            .hasError(27, "Unexpected whitespace '\xB7\xB7' between ';' and ';'.")
            // var
            .hasError(25, "Expected whitespace '\xB7' between 'var' and 'i', but '\xB7\xB7\xB7' found.")
            .hasError(30, "Expected whitespace '\xB7' between 'var' and 'a', but '\xB7\xB7' found.")
            .hasError(30, "Expected whitespace '\xB7' between 'a' and '=', but '\xB7\xB7\xB7' found.")
            .hasError(30, "Expected whitespace '\xB7' between '=' and '2', but '\xB7\xB7\xB7\xB7' found.")
            .hasError(31, "Expected whitespace '\xB7' between 'c' and '=', but '\xB7\xB7\xB7' found.")
            .hasError(31, "Expected whitespace '\xB7' between '=' and '3', but '\xB7\xB7' found.")
            // bitwise assign
            .hasError(33, "Expected whitespace '\xB7' between 'a' and '|=', but '\xB7\xB7' found.")
            .hasError(33, "Expected whitespace '\xB7' between '|=' and '3', but '\xB7\xB7' found.")
            // colons in object literals
            .hasError(36, "Unexpected whitespace '\xB7' between 'a' and ':'.")
            .hasError(37, "Unexpected whitespace '\xB7\xB7' between 'b' and ':'.")
            .hasError(37, "Expected whitespace '\xB7' between ':' and '3', but '\xB7\xB7\xB7' found.")
            // if
            .hasError(41, "Expected whitespace '\xB7' between 'if' and '(', but '\xB7\xB7' found.")
            .hasError(41, "Expected whitespace '\xB7' between ')' and '{', but '\xB7\xB7' found.")
            .hasError(41, "Expected whitespace '\xB7' between '}' and 'else', but '\xB7\xB7' found.")
            .hasError(41, "Expected whitespace '\xB7' between 'else' and 'if', but '\xB7\xB7' found.")
            // switch
            .hasError(43, "Expected whitespace '\xB7' between 'switch' and '(', but '\xB7\xB7' found.")
            .hasError(43, "Expected whitespace '\xB7' between ')' and '{', but '\xB7\xB7' found.")
            .hasError(44, "Expected whitespace '\xB7' between 'case' and '1', but '\xB7\xB7\xB7' found.")
            .hasError(44, "Unexpected whitespace '\xB7\xB7' between '1' and ':'.")
            
        .end()
    ;
};

/**
 * Whitespace rules
 * find the same errors than the "white"-option
 */
exports.format_whitespace_equal = function () {
    var src = fs.readFileSync(__dirname + "/fixtures/format/whitespace_equal.js", "utf8");
    
    helper(JSHINT, src)
        .init(false, {checkformat: false, white: true})
        .run()
            .hasError(2, "Unexpected space after '('.")
            .hasError(2, "Unexpected space after '('.")
            .hasError(2, "Missing space after ')'.")
            .hasError(3, "Unexpected space after '2'.")
            .hasError(5, "Missing space after 'x'.")
            .hasError(5, "Missing space after '='.")
            .hasError(5, "Missing space after 'function'.")
            .hasError(5, "Unexpected space after '('.")
            .hasError(5, "Unexpected space after 'a'.")
            .hasError(5, "Unexpected space after 'b'.")
            .hasError(5, "Missing space after ')'.")
            .hasError(5, "Unexpected space after '}'.")
            .hasError(7, "Missing space after 'try'.")
            .hasError(8, "Unexpected space after 'test'.")
            .hasError(8, "Unexpected space before 'toString'.")
            .hasError(9, "Missing space after 'catch'.")
            .hasError(9, "Missing space after ')'.")
            .hasError(11, "Missing space after 'while'.")
            .hasError(11, "Unexpected space after '('.")
            .hasError(11, "Unexpected space after 'true'.")
            .hasError(11, "Missing space after ')'.")
            .hasError(14, "Missing space after 'do'.")
            .hasError(15, "Missing space after 'while'.")
            .hasError(15, "Unexpected space after '('.")
            .hasError(15, "Unexpected space after 'true'.")
            .hasError(17, "Missing space after 'for'.")
            .hasError(17, "Unexpected space after '('.")
            .hasError(17, "Missing space after 'i'.")
            .hasError(17, "Missing space after '<'.")
            .hasError(17, "Unexpected space after '++'.")
            .hasError(17, "Missing space after ')'.")
            .hasError(19, "Missing space after 'a'.")
            .hasError(19, "Missing space after '='.")
            .hasError(19, "Unexpected space after '2'.")
            .hasError(19, "Missing space after ','.")
            .hasError(19, "Missing space after ','.")
            .hasError(19, "Missing space after 'b'.")
            .hasError(19, "Missing space after '='.")
            .hasError(19, "Unexpected space after '3'.")
            .hasError(22, "Missing space after 'a'.")
            .hasError(22, "Missing space after '|='.")
            .hasError(22, "Missing space after 'a'.")
            .hasError(22, "Missing space after '|='.")
            .hasError(22, "Unexpected space after '3'.")
            .hasError(24, "Missing space after 'to'.")
            .hasError(24, "Missing space after '='.")
            .hasError(25, "Expected 'a' to have an indentation at 5 instead at 6.")
            .hasError(25, "Missing space after ':'.")
            .hasError(30, "Missing space after 'if'.")
            .hasError(30, "Unexpected space after '('.")
            .hasError(30, "Missing space after '1'.")
            .hasError(30, "Missing space after '==='.")
            .hasError(30, "Unexpected space after '2'.")
            .hasError(30, "Missing space after ')'.")
            .hasError(30, "Missing space after '}'.")
            .hasError(30, "Missing space after 'if'.")
            .hasError(30, "Unexpected space after '('.")
            .hasError(30, "Missing space after '2'.")
            .hasError(30, "Missing space after '==='.")
            .hasError(30, "Unexpected space after '3'.")
            .hasError(30, "Missing space after ')'.")
            .hasError(32, "Missing space after 'switch'.")
            .hasError(32, "Unexpected space after '('.")
            .hasError(32, "Unexpected space after 'a'.")
            .hasError(32, "Missing space after ')'.")
            .hasError(33, "Expected 'case' to have an indentation at 1 instead at 5.")
            .hasError(34, "Expected 'break' to have an indentation at 5 instead at 9.")
            .hasError(35, "Expected 'case' to have an indentation at 1 instead at 5.")
            .hasError(36, "Expected 'break' to have an indentation at 5 instead at 9.")
            .hasError(37, "Expected 'default' to have an indentation at 1 instead at 5.")
            .hasError(38, "Expected 'break' to have an indentation at 5 instead at 9.")
        .end()
        .init(false, {checkformat: true, white: false})
        .run()
            .hasError(2, "Unexpected whitespace '\xB7' between '(' and ')'.")
            .hasError(2, "Expected whitespace '\xB7' between ')' and '{', but '' found.")
            .hasError(3, "Unexpected whitespace '\xB7' between '2' and ';'.")
            .hasError(5, "Expected whitespace '\xB7' between 'x' and '=', but '' found.")
            .hasError(5, "Expected whitespace '\xB7' between 'function' and '(', but '' found.")
            .hasError(5, "Unexpected whitespace '\xB7' between '(' and 'a'.")
            .hasError(5, "Unexpected whitespace '\xB7' between 'a' and ','.")
            .hasError(5, "Unexpected whitespace '\xB7' between 'b' and ')'.")
            .hasError(5, "Expected whitespace '\xB7' between ')' and '{', but '' found.")
            .hasError(5, "Expected whitespace '\xB7' between '=' and 'function', but '' found.")
            .hasError(5, "Unexpected whitespace '\xB7' between '}' and ';'.")
            .hasError(7, "Expected whitespace '\xB7' between 'try' and '{', but '' found.")
            .hasError(8, "Unexpected whitespace '\xB7' between 'test' and '.'.")
            .hasError(8, "Unexpected whitespace '\xB7' between '.' and 'toString'.")
            .hasError(9, "Expected whitespace '\xB7' between 'catch' and '(', but '' found.")
            .hasError(9, "Expected whitespace '\xB7' between ')' and '{', but '' found.")
            .hasError(11, "Expected whitespace '\xB7' between 'while' and '(', but '' found.")
            .hasError(11, "Unexpected whitespace '\xB7' between '(' and 'true'.")
            .hasError(11, "Unexpected whitespace '\xB7' between 'true' and ')'.")
            .hasError(11, "Expected whitespace '\xB7' between ')' and '{', but '' found.")
            .hasError(14, "Expected whitespace '\xB7' between 'do' and '{', but '' found.")
            .hasError(15, "Expected whitespace '\xB7' between 'while' and '(', but '' found.")
            .hasError(15, "Unexpected whitespace '\xB7' between '(' and 'true'.")
            .hasError(15, "Unexpected whitespace '\xB7' between 'true' and ')'.")
            .hasError(17, "Expected whitespace '\xB7' between 'for' and '(', but '' found.")
            .hasError(17, "Unexpected whitespace '\xB7' between '(' and 'var'.")
            .hasError(17, "Expected whitespace '\xB7' between 'i' and '<', but '' found.")
            .hasError(17, "Expected whitespace '\xB7' between '<' and '3', but '' found.")
            .hasError(17, "Unexpected whitespace '\xB7' between '++' and ')'.")
            .hasError(17, "Expected whitespace '\xB7' between ')' and '{', but '' found.")
            .hasError(19, "Expected whitespace '\xB7' between 'a' and '=', but '' found.")
            .hasError(19, "Expected whitespace '\xB7' between '=' and '2', but '' found.")
            .hasError(19, "Unexpected whitespace '\xB7' between '2' and ','.")
            .hasError(19, "Expected whitespace '\xB7' between ',' and 'b', but '' found.")
            .hasError(19, "Expected whitespace '\xB7' between 'b' and '=', but '' found.")
            .hasError(19, "Expected whitespace '\xB7' between '=' and '3', but '' found.")
            .hasError(19, "Unexpected whitespace '\xB7' between '3' and ','.")
            .hasError(22, "Expected whitespace '\xB7' between 'a' and '|=', but '' found.")
            .hasError(22, "Expected whitespace '\xB7' between '|=' and '3', but '' found.")
            .hasError(22, "Unexpected whitespace '\xB7' between '3' and ';'.")
            .hasError(24, "Expected whitespace '\xB7' between 'to' and '=', but '' found.")
            .hasError(25, "Expected indentation level of 1 (col 5) but found 1 (col 6).")
            .hasError(25, "Expected whitespace '\xB7' between ':' and '2', but '' found.")
            .hasError(24, "Expected whitespace '\xB7' between '=' and '{', but '' found.")
            .hasError(30, "Expected whitespace '\xB7' between 'if' and '(', but '' found.")
            .hasError(30, "Unexpected whitespace '\xB7' between '(' and '1'.")
            .hasError(30, "Expected whitespace '\xB7' between '1' and '===', but '' found.")
            .hasError(30, "Expected whitespace '\xB7' between '===' and '2', but '' found.")
            .hasError(30, "Unexpected whitespace '\xB7' between '2' and ')'.")
            .hasError(30, "Expected whitespace '\xB7' between ')' and '{', but '' found.")
            .hasError(30, "Expected whitespace '\xB7' between '}' and 'else', but '' found.")
            .hasError(30, "Expected whitespace '\xB7' between 'if' and '(', but '' found.")
            .hasError(30, "Unexpected whitespace '\xB7' between '(' and '2'.")
            .hasError(30, "Expected whitespace '\xB7' between '2' and '===', but '' found.")
            .hasError(30, "Expected whitespace '\xB7' between '===' and '3', but '' found.")
            .hasError(30, "Unexpected whitespace '\xB7' between '3' and ')'.")
            .hasError(30, "Expected whitespace '\xB7' between ')' and '{', but '' found.")
            .hasError(32, "Expected whitespace '\xB7' between 'switch' and '(', but '' found.")
            .hasError(32, "Unexpected whitespace '\xB7' between '(' and 'a'.")
            .hasError(32, "Unexpected whitespace '\xB7' between 'a' and ')'.")
            .hasError(32, "Expected whitespace '\xB7' between ')' and '{', but '' found.")
            .hasError(33, "Expected indentation level of 0 (col 1) but found 1 (col 5).")
            .hasError(34, "Expected indentation level of 1 (col 5) but found 2 (col 9).")
            .hasError(35, "Expected indentation level of 0 (col 1) but found 1 (col 5).")
            .hasError(36, "Expected indentation level of 1 (col 5) but found 2 (col 9).")
            .hasError(37, "Expected indentation level of 0 (col 1) but found 1 (col 5).")
            .hasError(38, "Expected indentation level of 1 (col 5) but found 2 (col 9).")

        .end()
    ;
};

/**
 * Switch statement rules
 * different indenting rules for switch statement
 */
exports.format_switch = function () {
    var src = fs.readFileSync(__dirname + "/fixtures/format/switch.js", "utf8");
    
    helper(JSHINT, src)
        .init(false, {white: true})
        .run()
            .hasError(12, "Expected 'break' to have an indentation at 5 instead at 1.")
            .hasError(14, "Expected 'break' to have an indentation at 5 instead at 1.")
            .hasError(16, "Expected 'break' to have an indentation at 5 instead at 1.")
            .hasError(45, "Expected 'case' to have an indentation at 1 instead at 5.")
            .hasError(47, "Expected 'case' to have an indentation at 1 instead at 5.")
            .hasError(49, "Expected 'default' to have an indentation at 1 instead at 5.")
            .hasError(62, "Expected 'case' to have an indentation at 1 instead at 5.")
            .hasError(63, "Expected 'break' to have an indentation at 5 instead at 9.")
            .hasError(64, "Expected 'case' to have an indentation at 1 instead at 5.")
            .hasError(65, "Expected 'break' to have an indentation at 5 instead at 9.")
            .hasError(66, "Expected 'default' to have an indentation at 1 instead at 5.")
            .hasError(67, "Expected 'break' to have an indentation at 5 instead at 9.")
            .hasError(82, "Expected indentation level of 0 (col 1) but found 0 (col 3).")
            .hasError(82, "Expected 'break' to have an indentation at 5 instead at 3.")
            .hasError(83, "Expected indentation level of 0 (col 1) but found 0 (col 3).")
            .hasError(83, "Expected 'case' to have an indentation at 1 instead at 3.")
            .hasError(84, "Expected indentation level of 0 (col 1) but found 1 (col 5).")
            .hasError(86, "Expected 'break' to have an indentation at 5 instead at 1.")
            .hasError(99, "Expected indentation level of 1 (col 5) but found 0 (col 3).")
            .hasError(99, "Expected 'break' to have an indentation at 5 instead at 3.")
            .hasError(100, "Expected indentation level of 0 (col 1) but found 0 (col 3).")
            .hasError(100, "Expected 'case' to have an indentation at 1 instead at 3.")
            .hasError(103, "Expected indentation level of 1 (col 5) but found 0 (col 1).")
            .hasError(103, "Expected 'break' to have an indentation at 5 instead at 1.")
            .hasError(115, "Expected indentation level of 1 (col 5) but found 0 (col 1).")
            .hasError(116, "Expected indentation level of 1 (col 5) but found 0 (col 3).")
            .hasError(116, "Expected 'break' to have an indentation at 5 instead at 3.")
            .hasError(117, "Expected indentation level of 1 (col 5) but found 0 (col 3).")
            .hasError(117, "Expected 'case' to have an indentation at 1 instead at 3.")
            .hasError(119, "Expected indentation level of 1 (col 5) but found 0 (col 1).")
            .hasError(120, "Expected indentation level of 1 (col 5) but found 0 (col 1).")
            .hasError(120, "Expected 'break' to have an indentation at 5 instead at 1.")
            .hasError(132, "Expected indentation level of 1 (col 5) but found 0 (col 1).")
            .hasError(133, "Expected indentation level of 2 (col 9) but found 0 (col 3).")
            .hasError(133, "Expected 'break' to have an indentation at 5 instead at 3.")
            .hasError(134, "Expected indentation level of 1 (col 5) but found 0 (col 3).")
            .hasError(134, "Expected 'case' to have an indentation at 1 instead at 3.")
            .hasError(135, "Expected indentation level of 2 (col 9) but found 1 (col 5).")
            .hasError(136, "Expected indentation level of 1 (col 5) but found 0 (col 1).")
            .hasError(137, "Expected indentation level of 2 (col 9) but found 0 (col 1).")
            .hasError(137, "Expected 'break' to have an indentation at 5 instead at 1.")
        .end()
        .init(false, {white: false})
        .run()
            .hasError(82, "Expected indentation level of 0 (col 1) but found 0 (col 3).")
            .hasError(83, "Expected indentation level of 0 (col 1) but found 0 (col 3).")
            .hasError(84, "Expected indentation level of 0 (col 1) but found 1 (col 5).")
            .hasError(99, "Expected indentation level of 1 (col 5) but found 0 (col 3).")
            .hasError(100, "Expected indentation level of 0 (col 1) but found 0 (col 3).")
            .hasError(103, "Expected indentation level of 1 (col 5) but found 0 (col 1).")
            .hasError(115, "Expected indentation level of 1 (col 5) but found 0 (col 1).")
            .hasError(116, "Expected indentation level of 1 (col 5) but found 0 (col 3).")
            .hasError(117, "Expected indentation level of 1 (col 5) but found 0 (col 3).")
            .hasError(119, "Expected indentation level of 1 (col 5) but found 0 (col 1).")
            .hasError(120, "Expected indentation level of 1 (col 5) but found 0 (col 1).")
            .hasError(132, "Expected indentation level of 1 (col 5) but found 0 (col 1).")
            .hasError(133, "Expected indentation level of 2 (col 9) but found 0 (col 3).")
            .hasError(134, "Expected indentation level of 1 (col 5) but found 0 (col 3).")
            .hasError(135, "Expected indentation level of 2 (col 9) but found 1 (col 5).")
            .hasError(136, "Expected indentation level of 1 (col 5) but found 0 (col 1).")
            .hasError(137, "Expected indentation level of 2 (col 9) but found 0 (col 1).")
        .end()
    ;

};